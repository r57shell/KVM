#!/bin/bash

VERSION=1.2

: 'List of helpers already taken up:
HELPERZERO
HELPERONE
HELPERTWO
HELPERTHREE
HELPERFOUR
HELPERFIVE
'

ONE=?

HELPERZERO=`ls /mnt/kvm-images | grep -i vm-server | cut -c 1-10`

HELPERFOUR=`virsh -c qemu:///system list | grep -q vm-server$NUM && echo true`

function beef {

RED='\033[0;31m'
CYAN='\033[0;36m'
GREEN='\033[0;32m'
PURPLE='\033[1;35m'
YELLOW='\033[1;33m'
NC='\033[0m' #No color

echo -e "${CYAN}What would you like to do$ONE Enter appropriate number.${NC}

1. View basic VM information
2. Start VM
3. Shutdown VM
4. Force shutdown VM
5. Delete VM
6. Create VM (Coming soon!)
7. Console VM
8. View version info
9. Exit

You entered:"

read HELPER

ONE=" next?"

if [ "$HELPER" = 1 ]; then 						#1. View basic VM information
	echo -e "${PURPLE}List of virtual machines running:${NC}"
	echo ""
	virsh -c qemu:///system list
	echo -e "
${PURPLE}List of virtual machines available:${NC}
"
#	HELPERZERO=`ls /mnt/kvm-images | grep -i vm-server`
#	echo "$HELPERZERO" | cut -c 1-10
	echo "$HELPERZERO"
	echo ""
	beef
elif [ "$HELPER" = 2 ]; then 						#2. Start VM
	echo -e "${PURPLE}Please enter VM number:${NC}"
	read NUM
	virsh -c qemu:///system start vm-server$NUM
	sleep 2
	beef
elif [ "$HELPER" = 3 ]; then						#3. Shutdown VM
	echo -e "${PURPLE}Please enter VM number:${NC}"
	read NUM
	virsh -c qemu:///system shutdown vm-server$NUM
	sleep 2
	beef
elif [ "$HELPER" = 4 ]; then						#4. Force shutdown VM
	echo -e "${PURPLE}Please enter VM number:${NC}"
	read NUM
	virsh -c qemu:///system destroy vm-server$NUM
	sleep 2
	beef
elif [ "$HELPER" = 5 ]; then 						#5. Delete VM
	echo -e "${PURPLE}Please enter full VM hostname:${NC}"
	read FULLVM
	HELPERONE=`ls -alh /mnt/kvm-images | grep -wF $FULLVM.img`
	if [ "$HELPERONE" = "" ]; then
		echo -e "
${RED}$FULLVM is not present. Please make sure you have typed the name correctly and try again.${NC}
"
		beef
	else
		echo -e "${PURPLE}This action cannot be undone! Do you want to continue with the VM removal? (yes/no)${NC}"
		read ANSW
			if [ "$ANSW" = yes ]; then
				echo -e "${PURPLE}Please wait while $FULLVM is being deleted.${NC}"
				sleep 2
				sudo rm -f /etc/libvirt/qemu/$FULLVM.xml && sudo rm -f /mnt/kvm-images/$FULLVM.img
				sleep 2
				echo -e "
${RED}$FULLVM has been deleted.${NC}
"
				beef
			elif [ "$ANSW" = no ]; then
				beef
			else 
				echo -e "
${RED}Invalid response!${NC}
"
				beef
			fi
	fi

: '
comments
'
: '
elif [ "$HELPER" = 6 ]; then							#6. Create VM
	echo -e "${PURPLE}Please enter VM number:${NC}"
	read NUM
	HELPERFIVE=`ls -alh /mnt/kvm-images | grep -wF vm-server$NUM.img`
	if [ "$HELPERFIVE" = "" ]; then
		echo -e "${PURPLE}Please enter name of the master QCOW2 image:${NC}"
		read BASE
		HELPERTHREE=`ls -alh /mnt/kvm-images | grep -wF $BASE.img`
		HELPERTWO=`ls -alh /mnt/kvm-images | grep -wF vm-server$NUM.img`
			if [ "$HELPERTHREE" = "" ]; then
				echo -e "
${RED}Can not find $BASE.img! Please make sure that the image is present or check spelling.${NC}
"
				beef 
			elif [ "$HELPERTWO" = "" ]; then
				sudo cp /mnt/kvm-images/$BASE.img /mnt/kvm-images/vm-server$NUM.img
				echo -e "${PURPLE}Finished!${NC}"
				beef
			else
				echo -e "${RED}VM already exists${NC}"
				beef
			fi
	else
		echo -e "
${RED}VM already exists! Please enter a different VM number.${NC}
"	
		beef
	fi
'

elif [ "$HELPER" = 7 ]; then							#7. Console VM
	echo "Please enter VM number"
	read NUM
	HELPERFOUR=`virsh -c qemu:///system list | grep -q vm-server$NUM && echo true`
	if [ "$HELPERFOUR" = true ]; then
		echo "Logging into vm-server$NUM. Please wait."
		sleep 3
		ssh vm-server$NUM
		exit
	else
		echo -e "
${RED}Cannot connect to console! Please make sure the VM is present or turned on.
"
		beef
	fi	
elif [ "$HELPER" = 8 ]; then							#8. View version info
	echo -e "${GREEN}Version $VERSION of virt-manage${NC}
	"
	beef
elif [ "$HELPER" = 9 ]; then							#9. Exit
	echo -e "
${YELLOW}Bye bye!${NC}
"
	exit
else										#else statement reloops function.
	echo -e "
${RED}Invalid input! Please select a viable option below.${NC}
"
	beef
fi
}


beef
